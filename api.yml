version: '3.8'

services:
  hvplot:
    image: epinux/hvplot:latest
    build:
      context: ./docker/hvplot
    environment:
      BOKEH_ALLOW_WS_ORIGIN: 'api.wps.met.no,hvplot.wps.met.no,metsis-staging.met.no,157.249.73.143'
      PORT: '7777'
      LOG_LEVEL: 'debug'
      BOKEH_LOG_LEVEL: 'debug'
      PYTHONUNBUFFERED: 1
      TSPLOT_DOWNLOAD: "/app/static/Download"
      PROCESSING_ENDPOINT: 'http://api:80'
      DOWNLOAD_ENDPOINT: 'https://api.wps.met.no'
    ports:
      - 7777:7777
    hostname: hvplot
    networks:
      - net
      - traefik-public
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        # max_attempts: 5
        # window: 240s
      resources:
        #limits:
        #  cpus: '0.50'
        #  memory: 2048M
        reservations:
          cpus: '0.25'
          memory: 512M
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.hvplot-http.rule=Host(`${UI_DOMAIN?Variable not set}`)
        - traefik.http.routers.hvplot-http.entrypoints=http
        - traefik.http.routers.hvplot-http.middlewares=https-redirect
        - traefik.http.routers.hvplot-https.rule=Host(`${UI_DOMAIN?Variable not set}`)
        - traefik.http.routers.hvplot-https.entrypoints=https
        - traefik.http.routers.hvplot-https.tls=true
        - traefik.http.routers.hvplot-https.tls.certresolver=le
        - traefik.http.services.hvplot.loadbalancer.server.port=7777
        # allow CORS
        - "traefik.http.middlewares.testheader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT"
        - "traefik.http.middlewares.testheader.headers.accesscontrolalloworiginlist=*"
        - "traefik.http.middlewares.testheader.headers.accesscontrolmaxage=100"
        - "traefik.http.middlewares.testheader.headers.addvaryheader=true"
    volumes:
      # - ./services/ui:/app
      - ./services/hvplot:/app
      - ./docker/hvplot/entrypoint.sh:/entrypoint.sh
    entrypoint: /entrypoint.sh

  # rabbit:
  #   image: rabbitmq:latest
  #   # ports:
  #   #   - 5672:5672
  #   hostname: rabbit
  #   networks:
  #     - net 

  worker:
    image: epinux/ncmet-api:latest
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DOWNLOAD_DIR=/app/data
      - PROCESSING_ENDPOINT=http://api:80
    command: celery -A worker.celery worker --loglevel=info --logfile=logs/celery.log
    depends_on:
      - redis
      - api
    volumes:
      - ./services/ncprocess:/app
      - ./logs/celery/celery.log:/logs/celery.log
      - download-data:/app/data
    networks:
      - net
      - traefik-public

  redis:
    #image: epinux/redis:local
    image: redis/redis-stack:latest
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    volumes:
      - ./services/ncprocess/redis_data/data:/data
      - ./services/ncprocess/redis_data/redis-stack.conf:/opt/redis-stack/etc/redis-stack.conf
    networks:
      - net
      - traefik-public
    hostname: redis

  api:
    image: epinux/ncmet-api:latest
    build:
      context: ./docker/api
    environment:
      # REDIS_PASSWORD: 'FGX0Im8cROKpFpHPOP8FETmOpLPsiLwEnHHXprOgn2AR7r7cGp'
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_PASSWORD='FGX0Im8cROKpFpHPOP8FETmOpLPsiLwEnHHXprOgn2AR7r7cGp'
      - UI_HOST=hvplot.wps.met.no
      - API_HOST=api.wps.met.no
      - PROCESSING_ENDPOINT=http://api:80
      - DOWNLOAD_DIR=/app/data
    volumes:
      - ./services/ncprocess:/app
      - download-data:/app/data
    # ports:
    #   - 8000:80
    hostname: api
    depends_on: 
      - redis
      - hvplot
    links:
      - hvplot
    networks:
      - net
      - traefik-public
    deploy:
      resources:
        #limits:
        #  cpus: '0.50'
        #  memory: 2048M
        reservations:
          cpus: '0.25'
          memory: 512M
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.api-http.rule=Host(`${API_DOMAIN?Variable not set}`)
        - traefik.http.routers.api-http.entrypoints=http
        - traefik.http.routers.api-http.middlewares=https-redirect
        - traefik.http.routers.api-https.rule=Host(`${API_DOMAIN?Variable not set}`)
        - traefik.http.routers.api-https.entrypoints=https
        - traefik.http.routers.api-https.tls=true
        - traefik.http.routers.api-https.tls.certresolver=le
        - traefik.http.services.api.loadbalancer.server.port=80
        # allow CORS
        - "traefik.http.middlewares.testheader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT"
        - "traefik.http.middlewares.testheader.headers.accesscontrolalloworiginlist=*"
        - "traefik.http.middlewares.testheader.headers.accesscontrolmaxage=100"
        - "traefik.http.middlewares.testheader.headers.addvaryheader=true"


networks:
  net:
    driver: overlay
    attachable: true
  traefik-public:
    external: true



volumes:
  redis-data:
  download-data:
